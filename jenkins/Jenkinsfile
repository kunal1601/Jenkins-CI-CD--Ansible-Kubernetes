pipeline {
    agent any

    environment {
        IMAGE_NAME = "flask-k8s-app"
        TAR_FILE = "flask-k8s-app.tar"
    }

    stages {

        stage('Clone GitHub Repo') {
            steps {
                git 'https://github.com/kunal1601/Jenkins-CI-CD--Ansible-Kubernetes.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh "sudo docker build -t ${IMAGE_NAME}:latest ."
                    sh "sudo docker save ${IMAGE_NAME}:latest -o ${TAR_FILE}"
                }
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                    script {
                        sh "sudo docker tag ${IMAGE_NAME}:latest ${DOCKER_USERNAME}/${IMAGE_NAME}:latest"
                        sh "echo '${DOCKER_PASSWORD}' | sudo docker login -u '${DOCKER_USERNAME}' --password-stdin"
                        sh "sudo docker push ${DOCKER_USERNAME}/${IMAGE_NAME}:latest"
                    }
                }
            }
        }

        stage('Run Ansible Deployment') {
            steps {
                dir('ansible') {
                    script {
                        // Disable host key checking inline
                        sh "ANSIBLE_HOST_KEY_CHECKING=False ansible-playbook deploy.yaml"
                    }
                }
            }
        }
    }
}

